version: '3'
services:

  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:2.4.1
    container_name: ocelot-config-server
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - INSPECTIT_CONFIG_SERVER_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_CONFIG_SERVER_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./configuration-server:/configuration-server
    ports:
      - 8090:8090

  agent:
    image: inspectit/inspectit-ocelot-agent:2.4.1
    container_name: agent
    deploy:
      resources:
        limits:
          memory: 128M
    volumes:
      - ./agent:/agent

  ocelot-eum-server:
    image: inspectit/inspectit-ocelot-eum-server:2.4.0
    container_name: ocelot-eum-server
    environment:
      - INSPECTIT_EUM_SERVER_EXPORTERS_METRICS_INFLUX_URL=http://influxdb:8086
      - INSPECTIT_EUM_SERVER_EXPORTERS_METRICS_INFLUX_DATABASE=inspectit_eum
      - INSPECTIT_EUM_SERVER_EXPORTERS_TRACING_JAEGER_GRPC=jaeger:14250
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - ./eum-server/data:/eum-server
    ports:
      - 8085:8085

  influxdb:
    image: influxdb:1.8.10
    container_name: influxdb
    environment:
      - INFLUXDB_HTTP_FLUX_ENABLED=true
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
      - INFLUXDB_META_DIR=/var/lib/influxdb/meta2
      - INFLUXDB_REPORTING_DISABLED=true
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./influx/continous-queries.iql:/docker-entrypoint-initdb.d/continous-queries.iql
      - ./influx/data:/var/lib/influxdb
    ports:
      - 8086:8086

  chronograf:
    image: chronograf:1.8.10
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
    ports:
      - 8888:8888
    volumes:
      - ./chronograf/data:/var/lib/chronograf

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.1
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: on-failure
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.7.1
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
    - elasticsearch

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.11.0
    hostname: jaeger-collector
    ports:
      - "14269:14269"
      - "14268:14268"
      - "14267:14267"
      - "9411:9411"
    restart: on-failure
    environment:
      LOG_LEVEL: "info"
      SPAN_STORAGE_TYPE: "elasticsearch"
      ES_SERVER_URLS: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch

  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.11.0
    hostname: jaeger-agent
    command: ["--collector.host-port=jaeger-collector:14267"]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    restart: on-failure
    environment:
      SPAN_STORAGE_TYPE: "elasticsearch"
    depends_on:
      - jaeger-collector

  jaeger-query:
    image: jaegertracing/jaeger-query:1.11.0
    environment:
      SPAN_STORAGE_TYPE: "elasticsearch"
      no_proxy: "localhost"
    ports:
      - "16686:16686"
      - "16687:16687"
    restart: on-failure
    command: [
      "--es.server-urls=http://elasticsearch:9200",
      "--span-storage.type=elasticsearch",
      "--log-level=debug"
    ]
    depends_on:
      - jaeger-agent

  grafana:
    image: grafana/grafana:9.0.2
    container_name: grafana
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=TRUE
      - GF_SECURITY_ADMIN_PASSWORD=demo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
      - GF_INSTALL_PLUGINS=https://github.com/NovatecConsulting/novatec-service-dependency-graph-panel/releases/download/v4.0.2/novatec-sdg-panel.zip;novatec-sdg-panel
    volumes:
      - ./grafana/provisioning/influxdb:/usr/share/grafana/custom/
      - ./grafana/provisioning/home-dashboard/home.json:/usr/share/grafana/public/dashboards/home.json
    ports:
      - 3000:3000

  loki:
    image: grafana/loki:2.5.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.5.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
